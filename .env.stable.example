# Example environment file for stable docker-compose
# Copy to .env.stable and edit if needed before running compose

# Standard streaming instance target URLs
STANDARD_1_URL=https://www.princeton.edu
STANDARD_2_URL=https://orfe.princeton.edu
STANDARD_3_URL=https://gradschool.princeton.edu

# Additional standard instance (optional)
STANDARD_4_URL=https://dof.princeton.edu

# Half-width source URLs
SOURCE_LEFT_URL=https://engineering.princeton.edu
SOURCE_RIGHT_URL=https://researchcomputing.princeton.edu

# Ingest endpoints (optional overrides)
STANDARD_1_INGEST=srt://srt-test-listener:9001?streamid=std1
STANDARD_2_INGEST=srt://srt-test-listener:9002?streamid=std2
STANDARD_3_INGEST=srt://srt-test-listener:9003?streamid=std3
STANDARD_4_INGEST=srt://srt-test-listener:9004?streamid=std4

# Compositor output (where the composed stream should be sent)
# Defaults to local srt-ingest service
COMPOSITOR_INGEST=srt://srt-ingest:9000?streamid=composite
# Default page refresh interval (seconds) used by services when not overridden
DEFAULT_REFRESH_INTERVAL=3600
# Environment variables for docker-compose.stable.yml

# Example production override:
# STANDARD_1_INGEST=srt://kaltura-ingest.example.com:10000?streamid=page-stream-1
# STANDARD_2_INGEST=srt://kaltura-ingest.example.com:10000?streamid=page-stream-2
# STANDARD_3_INGEST=srt://kaltura-ingest.example.com:10000?streamid=page-stream-3
# STANDARD_4_INGEST=srt://kaltura-ingest.example.com:10000?streamid=page-stream-4
# COMPOSITOR_INGEST=srt://kaltura-ingest.example.com:10000?streamid=page-stream-3

# Optional: paths inside the container to custom CSS/JS files to inject into pages
# These are mounted from the host via volumes. Example: map your host folder to `/out/custom`
#   docker-compose.yml volumes:    - ./custom:/out/custom:ro
# Then set the per-service inject variables to point at files inside `/out`.
# If set, `page-stream` will inject the CSS/JS into the page before capture. Useful to hide
# UI chrome, alter layout, or add small debug overlays.
# Per-service inject variables (optional). Example usage (demo assets are included under demo/assets):
#   STANDARD_1_INJECT_CSS=/out/demo/assets/inject.css
#   STANDARD_1_INJECT_JS=/out/demo/assets/inject.js
#   SOURCE_LEFT_INJECT_CSS=/out/demo/assets/inject.css
#   SOURCE_RIGHT_INJECT_JS=/out/demo/assets/inject.js
#
# Example values using demo assets included in the repository (useful for visual testing).
# These point to files that would be mounted into the container under /out/demo when using the
# example docker-compose; ensure your compose file maps ./demo to /out/demo (the provided
# compose file already does this in the examples).
# NOTE: Only one inject CSS and one inject JS value per container will be used by the
# entrypoint (first non-empty per type); if you want a global override, set INJECT_CSS/INJECT_JS.
STANDARD_1_INJECT_CSS=/out/demo/assets/inject.css
STANDARD_1_INJECT_JS=/out/demo/assets/inject.js
STANDARD_2_INJECT_CSS=/out/demo/assets/inject.css
STANDARD_2_INJECT_JS=/out/demo/assets/inject.js
STANDARD_3_INJECT_CSS=/out/demo/assets/inject.css
STANDARD_3_INJECT_JS=/out/demo/assets/inject.js
STANDARD_4_INJECT_CSS=/out/demo/assets/inject.css
STANDARD_4_INJECT_JS=/out/demo/assets/inject.js

# Half-width sources
SOURCE_LEFT_INJECT_CSS=/out/demo/assets/inject.css
SOURCE_LEFT_INJECT_JS=/out/demo/assets/inject.js
SOURCE_RIGHT_INJECT_CSS=/out/demo/assets/inject.css
SOURCE_RIGHT_INJECT_JS=/out/demo/assets/inject.js